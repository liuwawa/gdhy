<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.stats.dao.WithdrawalsStatsDao">

	<select id="queryObject" resultType="io.renren.modules.stats.entity.WithdrawalsStatsEntity">
		select * from tb_withdrawals_stats where id = #{value} and `del_flag` = 0
	</select>

	<select id="queryList" resultType="io.renren.modules.stats.entity.WithdrawalsStatsEntity">
		select * from tb_withdrawals_stats where `del_flag` = 0
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by `${sidx}` ${order}
            </when>
			<otherwise>
                order by `id` desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="sumGoldByTime" resultType="long">
		select sum(gold) FROM tb_withdrawals WHERE `create_time` BETWEEN #{a} AND #{b};
	</select>

	<select id="sumGoldFromStats" resultType="long">
		select sum(total) FROM tb_withdrawals_stats WHERE `type` = #{type} AND `than_day` BETWEEN #{a} AND #{b};
	</select>

	<select id="sumOrderStatsByStatus" resultType="long">
		select count(*) FROM tb_withdrawals WHERE
		<if test="status != 10">
			`status`=#{status} AND
		</if>
		`finish_time` BETWEEN #{a} AND #{b};
	</select>

 	<select id="queryTotal" resultType="int">
		select count(*) from tb_withdrawals_stats where `del_flag` = 0
	</select>

	<select id="RangeByHour" resultType="io.renren.modules.stats.entity.WithdrawalsStatsEntity">
		select * from tb_withdrawals_stats WHERE `type` = #{type} AND than_day BETWEEN #{a} AND #{b} AND than_hour BETWEEN #{hours} AND #{hours1};
	</select>

	<select id="RangeByCustom" resultType="io.renren.modules.stats.entity.WithdrawalsStatsEntity">
		select * from tb_withdrawals_stats WHERE `type` = #{type} AND ${field} BETWEEN #{a} AND #{b};
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.stats.entity.WithdrawalsStatsEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_withdrawals_stats
		(
			`type`, 
			`than_hour`, 
			`than_day`, 
			`than_month`, 
			`than_year`, 
			`create_time`, 
			`total`, 
			`compairson`,
			`total_fail`,
			`total_complete`
		)
		values
		(
			#{type}, 
			#{thanHour}, 
			#{thanDay}, 
			#{thanMonth}, 
			#{thanYear}, 
			#{createTime}, 
			#{total}, 
			#{compairson},
			#{totalFail},
			#{totalComplete}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.stats.entity.WithdrawalsStatsEntity">
		update tb_withdrawals_stats 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="thanHour != null">`than_hour` = #{thanHour}, </if>
			<if test="thanDay != null">`than_day` = #{thanDay}, </if>
			<if test="thanMonth != null">`than_month` = #{thanMonth}, </if>
			<if test="thanYear != null">`than_year` = #{thanYear}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="total != null">`total` = #{total}, </if>
			<if test="compairson != null">`compairson` = #{compairson}</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="delete">
		update tb_withdrawals_stats set `del_flag` = 1 where id = #{value}
	</update>
	
	<update id="deleteBatch">
        update tb_withdrawals_stats set `del_flag` = 1 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

</mapper>